{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_test_name": {
            "defaultValue": "test",
            "type": "String"
        },
        "workflows_tester_name": {
            "defaultValue": "tester",
            "type": "String"
        },
        "workflows_filesync_name": {
            "defaultValue": "filesync",
            "type": "String"
        },
        "workflows_SaveBlob_name": {
            "defaultValue": "SaveBlob",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "connections_office365_name": {
            "defaultValue": "office365",
            "type": "String"
        },
        "connections_azureblob_1_name": {
            "defaultValue": "azureblob-1",
            "type": "String"
        },
        "connections_azureblob_2_name": {
            "defaultValue": "azureblob-2",
            "type": "String"
        },
        "connections_office365_1_name": {
            "defaultValue": "office365-1",
            "type": "String"
        },
        "connections_webcontents_name": {
            "defaultValue": "webcontents",
            "type": "String"
        },
        "workflows_3_2CreateEML_name": {
            "defaultValue": "3_2CreateEML",
            "type": "String"
        },
        "workflows_tester_email_name": {
            "defaultValue": "tester_email",
            "type": "String"
        },
        "workflows_100_PSLogFile_name": {
            "defaultValue": "100_PSLogFile",
            "type": "String"
        },
        "connections_webcontents_1_name": {
            "defaultValue": "webcontents-1",
            "type": "String"
        },
        "connections_webcontents_2_name": {
            "defaultValue": "webcontents-2",
            "type": "String"
        },
        "connections_webcontents_3_name": {
            "defaultValue": "webcontents-3",
            "type": "String"
        },
        "workflows_0_PSEmailStart_name": {
            "defaultValue": "0_PSEmailStart",
            "type": "String"
        },
        "workflows_1_EmailStartv2_name": {
            "defaultValue": "1_EmailStartv2",
            "type": "String"
        },
        "workflows_0_1_GetUserData_name": {
            "defaultValue": "0_1_GetUserData",
            "type": "String"
        },
        "workflows_0_2_GetUserData_name": {
            "defaultValue": "0_2_GetUserData",
            "type": "String"
        },
        "storageAccounts_pdreview_name": {
            "defaultValue": "pdreview",
            "type": "String"
        },
        "workflows_1_PSCollectorHTTP_name": {
            "defaultValue": "1_PSCollectorHTTP",
            "type": "String"
        },
        "connections_wordonlinebusiness_name": {
            "defaultValue": "wordonlinebusiness",
            "type": "String"
        },
        "workflows_2_PSCollector_Email_name": {
            "defaultValue": "2_PSCollector_Email",
            "type": "String"
        },
        "workflows_tester_delta_folder_name": {
            "defaultValue": "tester_delta_folder",
            "type": "String"
        },
        "workflows_4_PSModernAttachment_name": {
            "defaultValue": "4_PSModernAttachment",
            "type": "String"
        },
        "storageAccounts_pdprocessing_name": {
            "defaultValue": "pdprocessing",
            "type": "String"
        },
        "workflows_2_PSCollector_Email_v2_name": {
            "defaultValue": "2_PSCollector_Email_v2",
            "type": "String"
        },
        "workflows_200_FileCopytoProsearch_name": {
            "defaultValue": "200_FileCopytoProsearch",
            "type": "String"
        },
        "workflows_3_3Sameattachmentasbinary_name": {
            "defaultValue": "3_3Sameattachmentasbinary",
            "type": "String"
        },
        "workflows_3_PSEmail_AttachmentCollector_name": {
            "defaultValue": "3_PSEmail_AttachmentCollector",
            "type": "String"
        },
        "workflows_5_PSEmail_AttachmentConverter_name": {
            "defaultValue": "5_PSEmail_AttachmentConverter",
            "type": "String"
        },
        "workflows_3_1_PS_Email_Attachment_Collector_name": {
            "defaultValue": "3_1_PS_Email_Attachment_Collector",
            "type": "String"
        },
        "workflows_3_3_2Attachmentsasbinarylookupb64_name": {
            "defaultValue": "3_3_2Attachmentsasbinarylookupb64",
            "type": "String"
        },
        "workflows_2_1PSCollector_Email_v2_RecoverableItems_name": {
            "defaultValue": "2_1PSCollector_Email_v2_RecoverableItems",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_0_1_GetUserData_name')]",
            "location": "westus2",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Initialize_Names_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@variables('Name Array')",
                                "method": "POST",
                                "uri": "https://prod-16.westus2.logic.azure.com:443/workflows/93f788c34add4416ac40597c40a38d7c/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=4ejZplgCi3b5azsZXrziSH34J6Dt5ezHG0YvUoIOfQM"
                            }
                        },
                        "Initialize_Names_Array": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Name Array",
                                        "type": "Array",
                                        "value": [
                                            {
                                                "Name": "joseph.zavala@prosearch.us"
                                            },
                                            {
                                                "Name": "akbar.lakhani@prosearch.us"
                                            },
                                            {
                                                "Name": "joseph.tomas@prosearch.us"
                                            },
                                            {
                                                "Name": "manuel.gutierrez@prosearch.us"
                                            },
                                            {
                                                "Name": "james.ngo@prosearch.us"
                                            },
                                            {
                                                "Name": "craig.cordts@prosearch.us"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_0_PSEmailStart_name')]",
            "location": "westus2",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 12
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Initialize_Names_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@variables('Name Array')",
                                "method": "POST",
                                "uri": "https://prod-26.westus2.logic.azure.com:443/workflows/c7446600b2b64a06884124b6f2175149/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=y0rm66AYGwQDV_sN9oxRLx4L9g9kqRkzfFDt0aZDTVs"
                            }
                        },
                        "Initialize_Names_Array": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Name Array",
                                        "type": "Array",
                                        "value": [
                                            {
                                                "Name": "joseph.zavala@prosearch.us"
                                            },
                                            {
                                                "Name": "akbar.lakhani@prosearch.us"
                                            },
                                            {
                                                "Name": "joseph.tomas@prosearch.us"
                                            },
                                            {
                                                "Name": "manuel.gutierrez@prosearch.us"
                                            },
                                            {
                                                "Name": "james.ngo@prosearch.us"
                                            },
                                            {
                                                "Name": "craig.cordts@prosearch.us"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_filesync_name')]",
            "location": "westus2",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {},
                    "actions": {},
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_tester_delta_folder_name')]",
            "location": "westus2",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "body": [
                                    {
                                        "Name": "joseph.zavala@prosearch.us"
                                    },
                                    {
                                        "Name": "akbar.lakhani@prosearch.us"
                                    },
                                    {
                                        "Name": "joseph.tomas@prosearch.us"
                                    },
                                    {
                                        "Name": "manuel.gutierrez@prosearch.us"
                                    },
                                    {
                                        "Name": "james.ngo@prosearch.us"
                                    },
                                    {
                                        "Name": "craig.cordts@prosearch.us"
                                    }
                                ],
                                "method": "POST",
                                "uri": "https://prod-17.westus2.logic.azure.com:443/workflows/9bdc2087c83f4abbb289684bb7110c01/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7vD_WT1PvFTEfnlJ-BLR7aiaon0ThI0sAn-NZUfC3YY"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_pdprocessing_name')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('storageAccounts_pdreview_name')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "PDReview",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_1_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "PDReview",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_2_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "Prosearch Blob",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "cwilcox@prosearch.us",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/', parameters('connections_office365_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_office365_1_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "ps365collector@prosearch.us",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/office365"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_webcontents_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "https://graph.microsoft.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/', parameters('connections_webcontents_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_webcontents_1_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "https://outlook.office.com/",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_webcontents_2_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "https://outlook.office365.com\n",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_webcontents_3_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "https://attachments.office.net/",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_wordonlinebusiness_name')]",
            "location": "westus2",
            "properties": {
                "displayName": "ppark@prosearch.us",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/', parameters('connections_wordonlinebusiness_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_0_2_GetUserData_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "user": "string"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 42
                                }
                            }
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Invoke_an_HTTP_request": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@body('Invoke_an_HTTP_request')",
                                "method": "POST",
                                "uri": "https://prod-28.westus2.logic.azure.com/workflows/20fca6eed9a0424da8664b9772b70e31/triggers/manual/paths/invoke/directory/users?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=iiTzwf7khQYPG872kZDLYKGi1UmrCnlGKFKIaUz6khA"
                            }
                        },
                        "Invoke_an_HTTP_request": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "method": "GET",
                                    "url": "https://graph.microsoft.com/beta/users/@{triggerBody()['name']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/codeless/InvokeHttp"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_100_PSLogFile_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/logs/@{concat(variables('Date')[0],'_',variables('Date')[1])}",
                                    "name": "@{string(utcNow())}",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Date",
                                        "type": "Array",
                                        "value": "@split(utcNow(),'-')"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_3_3Sameattachmentasbinary_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "user/{user}/messages/{messages}/guid/{guid}/CMD/{CMD}/ReceivedDate/{RCD}",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "@@odata.type": {
                                                "type": "string"
                                            },
                                            "contentBytes": {
                                                "type": "string"
                                            },
                                            "contentId": {
                                                "type": "string"
                                            },
                                            "contentLocation": {},
                                            "contentType": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "isInline": {
                                                "type": "boolean"
                                            },
                                            "lastModifiedDateTime": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "@@odata.type",
                                            "id",
                                            "lastModifiedDateTime",
                                            "name",
                                            "contentType",
                                            "size",
                                            "isInline",
                                            "contentId",
                                            "contentLocation",
                                            "contentBytes"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@base64ToBinary(triggerBody()['contentBytes'])",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/attachmentbinary/@{triggerOutputs()['relativePathParameters']['guid']}/",
                                    "name": "@triggerBody()['name']",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 20,
                                    "interval": "PT20S",
                                    "maximumInterval": "PT1H",
                                    "minimumInterval": "PT10S",
                                    "type": "exponential"
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_SaveBlob_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "/directory/{directory}",
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@triggerBody()",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/@{triggerOutputs()['relativePathParameters']['directory']}/@{concat(variables('Date')[0],'_',variables('Date')[1])}",
                                    "name": "@{guid()}",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "GUID": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "GUID",
                                        "type": "String",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "GUID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Date",
                                        "type": "Array",
                                        "value": "@split(utcNow(),'-')"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_test_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_wordonlinebusiness_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Convert_Word_Document_to_PDF": {
                            "runAfter": {},
                            "metadata": {
                                "01HXVCF7UDA5G4V5M7PBHIHB3BHI4OO5YV": "/Blog/Blog Post option FOP 2017-09-22.docx"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['wordonlinebusiness']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/api/templates/convertFile",
                                "queries": {
                                    "drive": "b!f1xoaWPyfU-SdXI2zJgkg003hTeK479Khf4zkNHZl-7TWjLlSKPST6SSlxL87zYI",
                                    "file": "01HXVCF7UDA5G4V5M7PBHIHB3BHI4OO5YV",
                                    "format": "pdf",
                                    "source": "me"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "wordonlinebusiness": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_wordonlinebusiness_name'))]",
                                "connectionName": "wordonlinebusiness",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/wordonlinebusiness"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_tester_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Invoke_an_HTTP_request": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@body('Invoke_an_HTTP_request')['attachments']",
                                "method": "POST",
                                "uri": "https://prod-30.westus2.logic.azure.com/workflows/ca94b9aa82b84f0596b580a9efe1922b/triggers/manual/paths/invoke/user/james.ngo@prosearch.us/messages/{AAMkADM4MTJlOTEwLThkMjEtNDYyYS05NDZjLWNmZjk4NDExYWIwNQBGAAAAAABab4kIbwlGQYI5TXZui7dcBwCToYSzLazlTZSInIePh6VIAAAAZHQpAAALn9TpKFrZS6nYDLNfEZYcAAADZH88AAA=/guid/123456789?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=C66qKgCSDlrUBVrrAE5CXapis415qxO-5oVJjjmP-x8"
                            }
                        },
                        "Invoke_an_HTTP_request": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "method": "GET",
                                    "url": "https://graph.microsoft.com/beta/users/james.ngo@prosearch.us/messages/AAMkADM4MTJlOTEwLThkMjEtNDYyYS05NDZjLWNmZjk4NDExYWIwNQBGAAAAAABab4kIbwlGQYI5TXZui7dcBwCToYSzLazlTZSInIePh6VIAAAAZHQpAAALn9TpKFrZS6nYDLNfEZYcAAADZH88AAA=?$expand=attachments"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/codeless/InvokeHttp"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_tester_email_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 3
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "HTTP": {
                            "runAfter": {
                                "Invoke_an_HTTP_request": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@array(body('Invoke_an_HTTP_request'))",
                                "method": "POST",
                                "uri": "https://prod-22.westus2.logic.azure.com/workflows/986d711f95a041829167c3b075354ae5/triggers/manual/paths/invoke/users/james.ngo@prosearch.us?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_OIX0s6jemPIToDvcDsuwWElN1E55pVslZSP5JkD8Qk"
                            }
                        },
                        "Invoke_an_HTTP_request": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "method": "GET",
                                    "url": "https://graph.microsoft.com/beta/users/james.ngo@prosearch.us/mailFolders/Inbox"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/codeless/InvokeHttp"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdprocessing_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdprocessing_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_1_PSCollectorHTTP_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "tags": {
                "state": "revised on hold"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "Name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize:Next_Link": {
                            "runAfter": {
                                "Initialize:_Value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NextLink",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Round": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Round",
                                        "type": "Integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize:_URL": {
                            "runAfter": {
                                "Initialize:_User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URL",
                                        "type": "String",
                                        "value": "https://graph.microsoft.com/beta/users/@{triggerBody()?['Name']}/mailFolders?$filter=totalItemCount+ge+1+or+childFolderCount+ge+1"
                                    }
                                ]
                            }
                        },
                        "Initialize:_User": {
                            "runAfter": {
                                "RoundTemp": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User",
                                        "type": "String",
                                        "value": "@triggerBody()?['Name']"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Value": {
                            "runAfter": {
                                "Initialize:_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Value",
                                        "type": "Object"
                                    }
                                ]
                            }
                        },
                        "Loop_for_FolderNames": {
                            "actions": {
                                "Are_there_More_Folders": {
                                    "actions": {
                                        "Increment_Round": {
                                            "runAfter": {
                                                "Set_URL": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Round",
                                                "value": "@add(variables('RoundT'),1)"
                                            }
                                        },
                                        "Set_URL": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@body('Parse_JSON')?['@odata.nextLink']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_RoundT": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_Round": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "Round",
                                                    "value": -1
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('Parse_JSON')?['@odata.nextLink']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Create_Folder_Info": {
                                    "runAfter": {
                                        "Set_RoundT": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Invoke_an_HTTP_request')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail2/@{variables('User')}/mailFolders",
                                            "name": "Folder_@{utcNow()}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Filter_array": {
                                    "runAfter": {
                                        "Create_Folder_Info": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Parse_JSON')?['value']",
                                        "where": "@greater(item()?['totalItemCount'], 0)"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "Filter_array": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Filter_array')",
                                        "method": "POST",
                                        "uri": "https://prod-13.westus2.logic.azure.com/workflows/533f777d99f648e69abb8b0cd2119d10/triggers/manual/paths/invoke/users/@{variables('User')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=slnaaEvcenWFBZ9vYVmyCfMeIRLSS4T3r_SpU0pYAxE"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Invoke_an_HTTP_request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "@variables('URL')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "Invoke_an_HTTP_request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Invoke_an_HTTP_request')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.nextLink": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "childFolderCount": {
                                                                "type": "integer"
                                                            },
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "parentFolderId": {
                                                                "type": "string"
                                                            },
                                                            "totalItemCount": {
                                                                "type": "integer"
                                                            },
                                                            "unreadItemCount": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "displayName",
                                                            "parentFolderId",
                                                            "childFolderCount",
                                                            "unreadItemCount",
                                                            "totalItemCount"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_RoundT": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "RoundT",
                                        "value": "@variables('Round')"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize:Next_Link": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('Round'), -1)",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "RoundTemp": {
                            "runAfter": {
                                "Initialize:_Round": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RoundT",
                                        "type": "Integer",
                                        "value": "@variables('Round')"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_200_FileCopytoProsearch_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_2_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET",
                                "relativePath": "/path/{path}/filename/{filename}",
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Create_Blob_in_Prosearch_Output": {
                            "runAfter": {
                                "Get_blob_content_using_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Get_blob_content_using_path')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/output/mail2/@{triggerOutputs()['relativePathParameters']['path']}",
                                    "name": "@triggerOutputs()['relativePathParameters']['filename']",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Get_blob_content_using_path": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/GetFileContentByPath",
                                "queries": {
                                    "inferContentType": true,
                                    "path": "/mail2/@{triggerOutputs()['relativePathParameters']['path']}/@{triggerOutputs()['relativePathParameters']['filename']}",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_2_name'))]",
                                "connectionName": "azureblob-2",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_3_2CreateEML_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "/user/{user}/guid/{guid}/CMD/{CMD}/ReceivedDate/{RCD}",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "@@odata.etag": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "@@removed": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "bccRecipients": {
                                            "type": "array"
                                        },
                                        "body": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "bodyPreview": {
                                            "type": "string"
                                        },
                                        "categories": {
                                            "type": "array"
                                        },
                                        "ccRecipients": {
                                            "type": "array"
                                        },
                                        "changeKey": {
                                            "type": "string"
                                        },
                                        "clientConversationId": {},
                                        "clientThreadId": {},
                                        "conversationId": {
                                            "type": "string"
                                        },
                                        "conversationIndex": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": "string"
                                        },
                                        "flag": {
                                            "properties": {
                                                "flagStatus": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "from": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "hasAttachments": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "importance": {
                                            "type": "string"
                                        },
                                        "inferenceClassification": {
                                            "type": "string"
                                        },
                                        "internetMessageId": {
                                            "type": "string"
                                        },
                                        "isDeliveryReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "isDraft": {
                                            "type": "boolean"
                                        },
                                        "isRead": {
                                            "type": "boolean"
                                        },
                                        "isReadReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "lastModifiedDateTime": {
                                            "type": "string"
                                        },
                                        "mentionsPreview": {},
                                        "parentFolderId": {
                                            "type": "string"
                                        },
                                        "receivedDateTime": {
                                            "type": "string"
                                        },
                                        "replyTo": {
                                            "type": "array"
                                        },
                                        "sender": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sentDateTime": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "toRecipients": {
                                            "items": {
                                                "properties": {
                                                    "emailAddress": {
                                                        "properties": {
                                                            "address": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "emailAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "unsubscribeData": {
                                            "type": "array"
                                        },
                                        "unsubscribeEnabled": {
                                            "type": "boolean"
                                        },
                                        "webLink": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "actions": {
                        "EML_Error": {
                            "actions": {
                                "Create_blob": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "{\"TriggerBody\":{@{triggerBody()}},\n\"Comment\":\"EML was not rendered\",\n\"Date\":@{utcNow()}}\n",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/error",
                                            "name": "@{guid()}_eml",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "EML_Successful": [
                                    "Failed"
                                ]
                            },
                            "type": "Scope"
                        },
                        "EML_Successful": {
                            "actions": {
                                "Delay": {
                                    "runAfter": {
                                        "Save_EML": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Wait",
                                    "inputs": {
                                        "interval": {
                                            "count": 1,
                                            "unit": "Minute"
                                        }
                                    }
                                },
                                "Get_EML_Rendering": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{variables('id')}/$value"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp",
                                        "retryPolicy": {
                                            "count": 90,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    }
                                },
                                "Save_EML": {
                                    "runAfter": {
                                        "Get_EML_Rendering": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_EML_Rendering')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/eml",
                                            "name": "@{triggerOutputs()['relativePathParameters']['guid']}.eml",
                                            "queryParametersSingleEncoded": true
                                        },
                                        "retryPolicy": {
                                            "count": 5,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Try2": {
                                    "runAfter": {
                                        "Delay": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_EML_Rendering')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/eml",
                                            "name": "@{triggerOutputs()['relativePathParameters']['guid']}.eml",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "id",
                                        "type": "String",
                                        "value": "@triggerBody()?['id']"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_3_3_2Attachmentsasbinarylookupb64_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "user/{user}/messages/{messages}/guid/{guid}/CMD/{CMD}/ReceivedDate/{RCD}",
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "@@odata.type": {
                                                "type": "string"
                                            },
                                            "contentBytes": {
                                                "type": "string"
                                            },
                                            "contentId": {
                                                "type": "string"
                                            },
                                            "contentLocation": {},
                                            "contentType": {
                                                "type": "string"
                                            },
                                            "id": {
                                                "type": "string"
                                            },
                                            "isInline": {
                                                "type": "boolean"
                                            },
                                            "lastModifiedDateTime": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "size": {
                                                "type": "integer"
                                            }
                                        },
                                        "required": [
                                            "@@odata.type",
                                            "id",
                                            "lastModifiedDateTime",
                                            "name",
                                            "contentType",
                                            "size",
                                            "isInline",
                                            "contentId",
                                            "contentLocation",
                                            "contentBytes"
                                        ],
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Error_Condition": {
                            "actions": {
                                "Create_Error_Message": {
                                    "runAfter": {
                                        "Invoke_an_HTTP_request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "{\"triggerBody\":@{body('Invoke_an_HTTP_request')},\n\"Date\":@{utcNow()},\n\"Comment\":\"This file did not download because it was too large\"}\n",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/error/attachments",
                                            "name": "@{triggerBody()['name']}_error",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Invoke_an_HTTP_request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerOutputs()['relativePathParameters']['messages']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Attachments": [
                                    "Failed"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Get_Attachments": {
                            "actions": {
                                "Create_blob": {
                                    "runAfter": {
                                        "Get_attachment": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_attachment')['ContentBytes']",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/attachmentbinary/@{triggerOutputs()['relativePathParameters']['guid']}",
                                            "name": "@triggerBody()['name']",
                                            "queryParametersSingleEncoded": true
                                        },
                                        "retryPolicy": {
                                            "count": 20,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Get_attachment": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerOutputs()['relativePathParameters']['messages']}/attachments/@{triggerBody()['id']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_5_PSEmail_AttachmentConverter_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_new_email_arrives": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/Mail/OnNewEmail",
                                "queries": {
                                    "fetchOnlyWithAttachment": true,
                                    "folderPath": "Inbox",
                                    "importance": "Any",
                                    "includeAttachments": true
                                }
                            }
                        }
                    },
                    "actions": {
                        "For_each_2": {
                            "foreach": "@triggerBody()?['Attachments']",
                            "actions": {
                                "Create_Blob_of_Attachments": {
                                    "runAfter": {
                                        "Create_Blob_of_EmailBody": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@base64ToBinary(items('For_each_2')?['ContentBytes'])",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail3/@{triggerBody()?['InternetMessageId']}/Attachments/",
                                            "name": "@items('For_each_2')?['Name']",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_Blob_of_EmailBody": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@triggerOutputs()",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail3/",
                                            "name": "@{triggerBody()?['InternetMessageId']}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_blob": {
                                    "runAfter": {
                                        "Create_Blob_of_Attachments": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@item()?['name']",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail3",
                                            "name": "@{triggerBody()?['Subject']}@{triggerBody()?['DateTimeReceived']}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {},
                            "type": "Foreach"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_office365_name'))]",
                                "connectionName": "office365",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/office365"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/log2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/logs')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/mail')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/mail2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/mail3')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/pssync')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('storageAccounts_pdreview_name'), '/default/users')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_pdreview_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_pdreview_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_2_1PSCollector_Email_v2_RecoverableItems_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "GET",
                                "relativePath": "users/{user}/CMD/{CMD}",
                                "schema": {}
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 50
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "Log": [
                                        "@triggerBody()"
                                    ],
                                    "action": "Completed Collector for this Folder",
                                    "date": [
                                        "@utcNow()"
                                    ],
                                    "user": [
                                        "@triggerOutputs()['relativePathParameters']['user']"
                                    ]
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Go_through_Delta_URLs_until_done": [
                                    "Succeeded"
                                ]
                            },
                            "limit": {
                                "timeout": "P2D"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('URL')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/recoverableitems",
                                    "name": "DeltaURL",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Get_Blob_Data": {
                            "actions": {
                                "Get_Blob_Metadata_using_path": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/GetFileByPath",
                                        "queries": {
                                            "path": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/recoverableitems/DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    }
                                },
                                "Get_blob_content_2": {
                                    "runAfter": {
                                        "Get_Blob_Metadata_using_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mail/delta/',triggerOutputs()['relativePathParameters']['user'],'/MailFolder/recoverableitems/DeltaURL'))}/content",
                                        "queries": {
                                            "inferContentType": true
                                        }
                                    }
                                },
                                "Set_URL": {
                                    "runAfter": {
                                        "Get_blob_content_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Get_blob_content_2')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize:_Value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Go_through_Delta_URLs_until_done": {
                            "actions": {
                                "Get_Delta_File": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "@variables('URL')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "Parse_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Parse_Data')?['value']",
                                        "method": "POST",
                                        "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/CMD/{CMD}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Loop_Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {
                                                "Set_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Parse_Data')?['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_variable_2": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_new_@odata.nextlink": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "URL",
                                                    "value": "@body('Parse_Data')?['@odata.nextLink']"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_Data')?['@odata.nextLink']",
                                                    "@null"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_Data": {
                                    "runAfter": {
                                        "Get_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Delta_File')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.deltaLink": {
                                                    "type": "string"
                                                },
                                                "@@odata.nextLink": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "@@odata.etag": {
                                                                "type": "string"
                                                            },
                                                            "@@odata.type": {
                                                                "type": "string"
                                                            },
                                                            "bccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "body": {
                                                                "properties": {
                                                                    "content": {
                                                                        "type": "string"
                                                                    },
                                                                    "contentType": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "bodyPreview": {
                                                                "type": "string"
                                                            },
                                                            "categories": {
                                                                "type": "array"
                                                            },
                                                            "ccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "changeKey": {
                                                                "type": "string"
                                                            },
                                                            "clientConversationId": {},
                                                            "clientThreadId": {},
                                                            "conversationId": {
                                                                "type": "string"
                                                            },
                                                            "conversationIndex": {
                                                                "type": "string"
                                                            },
                                                            "createdDateTime": {
                                                                "type": "string"
                                                            },
                                                            "flag": {
                                                                "properties": {
                                                                    "flagStatus": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "from": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hasAttachments": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "importance": {
                                                                "type": "string"
                                                            },
                                                            "inferenceClassification": {
                                                                "type": "string"
                                                            },
                                                            "internetMessageId": {
                                                                "type": "string"
                                                            },
                                                            "isDeliveryReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isDraft": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isRead": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isReadReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastModifiedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "mentionsPreview": {},
                                                            "parentFolderId": {
                                                                "type": "string"
                                                            },
                                                            "receivedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "replyTo": {
                                                                "type": "array"
                                                            },
                                                            "sender": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "sentDateTime": {
                                                                "type": "string"
                                                            },
                                                            "subject": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "toRecipients": {
                                                                "items": {
                                                                    "properties": {
                                                                        "emailAddress": {
                                                                            "properties": {
                                                                                "address": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "emailAddress"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "unsubscribeData": {
                                                                "type": "array"
                                                            },
                                                            "unsubscribeEnabled": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "webLink": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "If_Blob_is_Empty_Do_initial_Run": [
                                    "Succeeded",
                                    "Skipped"
                                ]
                            },
                            "expression": "@equals(variables('Value'), true)",
                            "limit": {
                                "count": 1000,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "If_Blob_is_Empty_Do_initial_Run": {
                            "actions": {
                                "Check_if_NextLink_is_Blank": {
                                    "actions": {
                                        "Run_Initial_collector": {
                                            "runAfter": {
                                                "Set_URL_to_deltalink": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": "@body('Create_New_Delta_Request')?['value']",
                                                "method": "POST",
                                                "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/CMD/{CMD}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                            }
                                        },
                                        "Set_URL_to_deltalink": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Create_New_Delta_Request')['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_Value_To_True_if_complete": {
                                            "runAfter": {
                                                "Run_Initial_collector": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": "@true"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_URL_to_Delta_NextLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@length(variables('URL'))",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Create_Delta_File": {
                                    "runAfter": {
                                        "Check_if_NextLink_is_Blank": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('URL')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/recoverableitems",
                                            "name": "DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern",
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_New_Delta_Request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/mailFolders/recoverableitemsdeletions/messages/delta"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp",
                                        "retryPolicy": {
                                            "count": 20,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Set_URL_to_Delta_NextLink": {
                                    "runAfter": {
                                        "Create_New_Delta_Request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Create_New_Delta_Request')['@odata.nextlink']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_Blob_Data": [
                                    "Failed"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Initialize:URL": {
                            "runAfter": {
                                "Initialize:_DisplayName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URL",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize:_DisplayName": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DisplayName",
                                        "type": "String",
                                        "value": "recoverableitemsdeleted"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Value": {
                            "runAfter": {
                                "Initialize:URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Value",
                                        "type": "Boolean",
                                        "value": false
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_2_PSCollector_Email_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "tags": {
                "state": "revised on hold"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "users/{user}",
                                "schema": {
                                    "properties": {
                                        "childFolderCount": {
                                            "type": "integer"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "parentFolderId": {
                                            "type": "string"
                                        },
                                        "totalItemCount": {
                                            "type": "integer"
                                        },
                                        "unreadItemCount": {
                                            "type": "integer"
                                        },
                                        "wellKnownName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 42
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "Log": [
                                        "@triggerBody()"
                                    ],
                                    "action": "Completed Collector for this Folder",
                                    "date": [
                                        "@utcNow()"
                                    ],
                                    "user": [
                                        "@triggerOutputs()['relativePathParameters']['user']"
                                    ]
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Check_if_Delta_URL_Exists": {
                            "actions": {
                                "Condition_2": {
                                    "actions": {
                                        "Set_URL_to_deltalink": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Create_New_Delta_Request')['@odata.deltaLink']}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_URL_to_Delta_NextLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@length(variables('URL'))",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Create_Delta_File": {
                                    "runAfter": {
                                        "HTTP_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('URL')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail2/@{triggerOutputs()['relativePathParameters']['user']}/delta/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}",
                                            "name": "DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern",
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_New_Delta_Request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/mailFolders/@{triggerBody()?['id']}/messages/delta"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "HTTP_3": {
                                    "runAfter": {
                                        "Condition_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Create_New_Delta_Request')?['value']",
                                        "method": "POST",
                                        "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                    }
                                },
                                "Set_URL_to_Delta_NextLink": {
                                    "runAfter": {
                                        "Create_New_Delta_Request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Create_New_Delta_Request')['@odata.nextlink']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Set_URL": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "expression": {
                                "or": [
                                    {
                                        "equals": [
                                            "@empty(body('Get_Blob_Metadata_using_path')?['DisplayName'])",
                                            true
                                        ]
                                    },
                                    {
                                        "less": [
                                            "@length(variables('URL'))",
                                            4
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Go_through_Delta_URLs_until_done": [
                                    "Succeeded"
                                ]
                            },
                            "limit": {
                                "timeout": "P2D"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('URL')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/mail2/@{triggerOutputs()['relativePathParameters']['user']}/delta/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}",
                                    "name": "DeltaURL",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Get_Blob_Metadata_using_path": {
                            "runAfter": {
                                "Initialize_URLTemp": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/GetFileByPath",
                                "queries": {
                                    "path": "/mail2/@{triggerOutputs()['relativePathParameters']['user']}/delta/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}/DeltaURL",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "Get_blob_content_2": {
                            "runAfter": {
                                "Get_Blob_Metadata_using_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mail2/',triggerOutputs()['relativePathParameters']['user'],'/delta/',triggerBody()?['parentFolderId'],'/',variables('DisplayName'),'/DeltaURL'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Get_blob_content_from_Delta_URL": {
                            "runAfter": {
                                "Initialize:_Value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mail2/',triggerOutputs()['relativePathParameters']['user'],'/delta/',triggerBody()?['parentFolderId'],'/',variables('DisplayName'),'/DeltaURL'))}/content",
                                "queries": {
                                    "inferContentType": true
                                },
                                "retryPolicy": {
                                    "count": 12,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Go_through_Delta_URLs_until_done": {
                            "actions": {
                                "Check_URL_Temp": {
                                    "actions": {
                                        "Set_URL_to_new_Delta_NextLink": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@variables('URLTemp')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Condition": {
                                                "actions": {},
                                                "runAfter": {
                                                    "Set_to_Deltalink": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "else": {
                                                    "actions": {
                                                        "Set_URL_to_URLTemp_if_long_enough": {
                                                            "runAfter": {},
                                                            "type": "SetVariable",
                                                            "inputs": {
                                                                "name": "URL",
                                                                "value": "@variables('URLTemp')"
                                                            }
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "less": [
                                                                "@length(variables('URLTemp'))",
                                                                4
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Set_to_Deltalink": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "URLTemp",
                                                    "value": "@{body('Get_Delta_File')['@odata.deltaLink']}"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('URLTemp'))",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Get_Delta_File": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "@variables('URL')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "Check_URL_Temp": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Parse_Data')?['value']",
                                        "method": "POST",
                                        "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Loop_Condition": {
                                    "actions": {
                                        "Set_variable_2": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@length(body('Get_Delta_File')['value'])",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_Data": {
                                    "runAfter": {
                                        "Get_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Delta_File')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.nextLink": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "@@odata.etag": {
                                                                "type": "string"
                                                            },
                                                            "@@odata.type": {
                                                                "type": "string"
                                                            },
                                                            "bccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "body": {
                                                                "properties": {
                                                                    "content": {
                                                                        "type": "string"
                                                                    },
                                                                    "contentType": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "bodyPreview": {
                                                                "type": "string"
                                                            },
                                                            "categories": {
                                                                "type": "array"
                                                            },
                                                            "ccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "changeKey": {
                                                                "type": "string"
                                                            },
                                                            "clientConversationId": {},
                                                            "clientThreadId": {},
                                                            "conversationId": {
                                                                "type": "string"
                                                            },
                                                            "conversationIndex": {
                                                                "type": "string"
                                                            },
                                                            "createdDateTime": {
                                                                "type": "string"
                                                            },
                                                            "flag": {
                                                                "properties": {
                                                                    "flagStatus": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "from": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hasAttachments": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "importance": {
                                                                "type": "string"
                                                            },
                                                            "inferenceClassification": {
                                                                "type": "string"
                                                            },
                                                            "internetMessageId": {
                                                                "type": "string"
                                                            },
                                                            "isDeliveryReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isDraft": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isRead": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isReadReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastModifiedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "mentionsPreview": {},
                                                            "parentFolderId": {
                                                                "type": "string"
                                                            },
                                                            "receivedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "replyTo": {
                                                                "type": "array"
                                                            },
                                                            "sender": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "sentDateTime": {
                                                                "type": "string"
                                                            },
                                                            "subject": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "toRecipients": {
                                                                "items": {
                                                                    "properties": {
                                                                        "emailAddress": {
                                                                            "properties": {
                                                                                "address": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "emailAddress"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "unsubscribeData": {
                                                                "type": "array"
                                                            },
                                                            "unsubscribeEnabled": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "webLink": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "Parse_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URLTemp",
                                        "value": "@body('Parse_Data')?['@odata.nextLink']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_blob_content_from_Delta_URL": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('Value'), true)",
                            "limit": {
                                "count": 1000,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Initialize:URL": {
                            "runAfter": {
                                "Initialize:_DisplayName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URL",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize:_DisplayName": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DisplayName",
                                        "type": "String",
                                        "value": "@{replace(trim(triggerBody()?['displayName']),'/','_')}"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Value": {
                            "runAfter": {
                                "Check_if_Delta_URL_Exists": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Value",
                                        "type": "Boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Initialize_URLTemp": {
                            "runAfter": {
                                "Initialize:URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URLTemp",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Set_URL": {
                            "runAfter": {
                                "Get_blob_content_2": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "URL",
                                "value": "@{body('Get_blob_content_2')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_2_PSCollector_Email_v2_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "users/{user}/CMD/{CMD}",
                                "schema": {
                                    "properties": {
                                        "childFolderCount": {
                                            "type": "integer"
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "parentFolderId": {
                                            "type": "string"
                                        },
                                        "totalItemCount": {
                                            "type": "integer"
                                        },
                                        "unreadItemCount": {
                                            "type": "integer"
                                        },
                                        "wellKnownName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 50
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "Log": [
                                        "@triggerBody()"
                                    ],
                                    "action": "Completed Collector for this Folder",
                                    "date": [
                                        "@utcNow()"
                                    ],
                                    "user": [
                                        "@triggerOutputs()['relativePathParameters']['user']"
                                    ]
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Check_if_Blob_Exists": {
                            "actions": {
                                "Get_Blob_Metadata_using_path": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/GetFileByPath",
                                        "queries": {
                                            "path": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}/DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    }
                                },
                                "Get_blob_content_2": {
                                    "runAfter": {
                                        "Get_Blob_Metadata_using_path": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mail/delta/',triggerOutputs()['relativePathParameters']['user'],'/MailFolder/',triggerBody()?['parentFolderId'],'/',variables('DisplayName'),'/DeltaURL'))}/content",
                                        "queries": {
                                            "inferContentType": true
                                        }
                                    }
                                },
                                "Set_URL": {
                                    "runAfter": {
                                        "Get_blob_content_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Get_blob_content_2')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize:_Value": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Go_through_Delta_URLs_until_done": [
                                    "Succeeded"
                                ]
                            },
                            "limit": {
                                "timeout": "P2D"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('URL')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}",
                                    "name": "DeltaURL",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Go_through_Delta_URLs_until_done": {
                            "actions": {
                                "Get_Delta_File": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "@variables('URL')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                },
                                "HTTP": {
                                    "runAfter": {
                                        "Parse_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Parse_Data')?['value']",
                                        "method": "POST",
                                        "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/CMD/@{triggerOutputs()['relativePathParameters']['CMD']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Loop_Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {
                                                "Set_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Parse_Data')?['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_variable_2": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "HTTP": [
                                            "Succeeded",
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_new_@odata.nextlink": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "URL",
                                                    "value": "@body('Parse_Data')?['@odata.nextLink']"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_Data')?['@odata.nextLink']",
                                                    "@null"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_Data": {
                                    "runAfter": {
                                        "Get_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Delta_File')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.deltaLink": {
                                                    "type": "string"
                                                },
                                                "@@odata.nextLink": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "@@odata.etag": {
                                                                "type": "string"
                                                            },
                                                            "@@odata.type": {
                                                                "type": "string"
                                                            },
                                                            "bccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "body": {
                                                                "properties": {
                                                                    "content": {
                                                                        "type": "string"
                                                                    },
                                                                    "contentType": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "bodyPreview": {
                                                                "type": "string"
                                                            },
                                                            "categories": {
                                                                "type": "array"
                                                            },
                                                            "ccRecipients": {
                                                                "type": "array"
                                                            },
                                                            "changeKey": {
                                                                "type": "string"
                                                            },
                                                            "clientConversationId": {},
                                                            "clientThreadId": {},
                                                            "conversationId": {
                                                                "type": "string"
                                                            },
                                                            "conversationIndex": {
                                                                "type": "string"
                                                            },
                                                            "createdDateTime": {
                                                                "type": "string"
                                                            },
                                                            "flag": {
                                                                "properties": {
                                                                    "flagStatus": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "from": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "hasAttachments": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "importance": {
                                                                "type": "string"
                                                            },
                                                            "inferenceClassification": {
                                                                "type": "string"
                                                            },
                                                            "internetMessageId": {
                                                                "type": "string"
                                                            },
                                                            "isDeliveryReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isDraft": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isRead": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isReadReceiptRequested": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "lastModifiedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "mentionsPreview": {},
                                                            "parentFolderId": {
                                                                "type": "string"
                                                            },
                                                            "receivedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "replyTo": {
                                                                "type": "array"
                                                            },
                                                            "sender": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "sentDateTime": {
                                                                "type": "string"
                                                            },
                                                            "subject": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "toRecipients": {
                                                                "items": {
                                                                    "properties": {
                                                                        "emailAddress": {
                                                                            "properties": {
                                                                                "address": {
                                                                                    "type": "string"
                                                                                },
                                                                                "name": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "emailAddress"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "unsubscribeData": {
                                                                "type": "array"
                                                            },
                                                            "unsubscribeEnabled": {
                                                                "type": [
                                                                    "boolean",
                                                                    "null"
                                                                ]
                                                            },
                                                            "webLink": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Run_If_initial_Does_not_exist": [
                                    "Succeeded",
                                    "Skipped"
                                ]
                            },
                            "expression": "@equals(variables('Value'), true)",
                            "limit": {
                                "count": 1000,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Initialize:URL": {
                            "runAfter": {
                                "Initialize:_DisplayName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URL",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize:_DisplayName": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DisplayName",
                                        "type": "String",
                                        "value": "@{replace(trim(triggerBody()?['displayName']),'/','_')}"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Value": {
                            "runAfter": {
                                "Initialize:URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Value",
                                        "type": "Boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Run_If_initial_Does_not_exist": {
                            "actions": {
                                "Create_Delta_File": {
                                    "runAfter": {
                                        "Set_URL_to_Delta_NextLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('URL')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail/delta/@{triggerOutputs()['relativePathParameters']['user']}/MailFolder/@{triggerBody()?['parentFolderId']}/@{variables('DisplayName')}",
                                            "name": "DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern",
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_New_Delta_Request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/mailFolders/@{triggerBody()?['id']}/messages/delta"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp",
                                        "retryPolicy": {
                                            "count": 20,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "If_Nextlink_Doesn't_Exist": {
                                    "actions": {
                                        "Run_Initial_collector": {
                                            "runAfter": {
                                                "Set_URL_to_deltalink": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": "@body('Create_New_Delta_Request')?['value']",
                                                "method": "POST",
                                                "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/CMD/@{triggerOutputs()['relativePathParameters']['CMD']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                            }
                                        },
                                        "Set_URL_to_deltalink": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Create_New_Delta_Request')['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_Value": {
                                            "runAfter": {
                                                "Run_Initial_collector": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": "@true"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Create_New_Delta_Request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@length(variables('URL'))",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Run_Initial_Collection": {
                                    "runAfter": {
                                        "Create_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@createArray(body('Create_New_Delta_Request'))",
                                        "method": "POST",
                                        "retryPolicy": {
                                            "count": 20,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        },
                                        "uri": "https://prod-29.westus2.logic.azure.com/workflows/e6f3de599daf4315bc4ac3fa1c176531/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/CMD/@{triggerOutputs()['relativePathParameters']['CMD']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=IfK1_tITQCidcvm45Fb_6owD-XDp4cTlPv2xfDIPrJ4"
                                    }
                                },
                                "Set_URL_to_Delta_NextLink": {
                                    "runAfter": {
                                        "If_Nextlink_Doesn't_Exist": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Create_New_Delta_Request')['@odata.nextlink']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Check_if_Blob_Exists": [
                                    "Failed"
                                ]
                            },
                            "type": "Scope"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_3_1_PS_Email_Attachment_Collector_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "/user/{user}/ReceivedDate/{RCD}/CMD/{CMD}",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "@@odata.etag": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "bccRecipients": {
                                            "type": "array"
                                        },
                                        "body": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "bodyPreview": {
                                            "type": "string"
                                        },
                                        "categories": {
                                            "type": "array"
                                        },
                                        "ccRecipients": {
                                            "type": "array"
                                        },
                                        "changeKey": {
                                            "type": "string"
                                        },
                                        "clientConversationId": {},
                                        "clientThreadId": {},
                                        "conversationId": {
                                            "type": "string"
                                        },
                                        "conversationIndex": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": "string"
                                        },
                                        "flag": {
                                            "properties": {
                                                "flagStatus": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "from": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "hasAttachments": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "importance": {
                                            "type": "string"
                                        },
                                        "inferenceClassification": {
                                            "type": "string"
                                        },
                                        "internetMessageId": {
                                            "type": "string"
                                        },
                                        "isDeliveryReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "isDraft": {
                                            "type": "boolean"
                                        },
                                        "isRead": {
                                            "type": "boolean"
                                        },
                                        "isReadReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "lastModifiedDateTime": {
                                            "type": "string"
                                        },
                                        "mentionsPreview": {},
                                        "parentFolderId": {
                                            "type": "string"
                                        },
                                        "receivedDateTime": {
                                            "type": "string"
                                        },
                                        "replyTo": {
                                            "type": "array"
                                        },
                                        "sender": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sentDateTime": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "toRecipients": {
                                            "items": {
                                                "properties": {
                                                    "emailAddress": {
                                                        "properties": {
                                                            "address": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "emailAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "unsubscribeData": {
                                            "type": "array"
                                        },
                                        "unsubscribeEnabled": {
                                            "type": "boolean"
                                        },
                                        "webLink": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 50
                                }
                            }
                        }
                    },
                    "actions": {
                        "Initialize_Trigger_Body": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Trigger Body",
                                        "type": "Object",
                                        "value": "@triggerBody()"
                                    }
                                ]
                            }
                        },
                        "Initialize_User2": {
                            "runAfter": {
                                "ReferenceAttachmentParts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User2",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user",
                                        "type": "String",
                                        "value": "@triggerOutputs()['relativePathParameters']['user']"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Initialize_User2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Username Parts",
                                        "type": "Array"
                                    }
                                ]
                            }
                        },
                        "ReferenceAttachmentParts": {
                            "runAfter": {
                                "Initialize_Trigger_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ReferenceAttachmentParts",
                                        "type": "Array"
                                    }
                                ]
                            }
                        },
                        "Request_for_1_Record_Not_Array_Retry": {
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "method": "GET",
                                    "url": "https://graph.microsoft.com/beta/users/@{variables('user')}/mailFolders/@{triggerBody()?['parentFolderId']}/messages/@{triggerBody()?['id']}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/codeless/InvokeHttp"
                            }
                        },
                        "Set_variable": {
                            "runAfter": {
                                "Request_for_1_Record_Not_Array_Retry": [
                                    "Succeeded"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "Trigger Body",
                                "value": "@body('Request_for_1_Record_Not_Array_Retry')"
                            }
                        },
                        "hasAttachment": {
                            "actions": {
                                "100_PSLogFile": {
                                    "runAfter": {
                                        "Compose": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Workflow",
                                    "inputs": {
                                        "body": "@outputs('Compose')",
                                        "host": {
                                            "triggerName": "manual",
                                            "workflow": {
                                                "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                            }
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Compose": {
                                    "runAfter": {
                                        "Create_blob": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "Action": "Create Email Record",
                                        "Date": "@utcNow()",
                                        "EmailID": "@{body('Create_blob')?['Id']}",
                                        "GUID": "@{body('Create_blob')?['Name']}"
                                    }
                                },
                                "Create_blob": {
                                    "runAfter": {
                                        "Get_attachments_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@triggerBody()",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{variables('user')}/@{triggerOutputs()['relativePathParameters']['RCD']}/messages\n\n",
                                            "name": "@{guid()}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern",
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Filter_for_Modern_Attachments": {
                                    "runAfter": {
                                        "Parse_JSON": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Query",
                                    "inputs": {
                                        "from": "@body('Parse_JSON')?['attachments']",
                                        "where": "@not(equals(item()?['sourceUrl'], null))"
                                    }
                                },
                                "Get_attachments_": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerBody()['id']}/?$expand=attachments"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Parse_JSON": {
                                    "runAfter": {
                                        "100_PSLogFile": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_attachments_')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "@@odata.etag": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "attachments": {
                                                    "items": {
                                                        "properties": {
                                                            "@@odata.mediaContentType": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "@@odata.type": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contentBytes": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contentId": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "contentLocation": {},
                                                            "contentType": {},
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "image": {
                                                                "properties": {
                                                                    "height": {
                                                                        "type": "integer"
                                                                    },
                                                                    "width": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": [
                                                                    "object",
                                                                    "null"
                                                                ]
                                                            },
                                                            "isFolder": {
                                                                "type": "boolean"
                                                            },
                                                            "isInline": {
                                                                "type": "boolean"
                                                            },
                                                            "lastModifiedDateTime": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "permission": {
                                                                "type": "string"
                                                            },
                                                            "previewUrl": {
                                                                "type": "string"
                                                            },
                                                            "providerType": {
                                                                "type": "string"
                                                            },
                                                            "size": {
                                                                "type": "integer"
                                                            },
                                                            "sourceUrl": {
                                                                "type": "string"
                                                            },
                                                            "thumbnailUrl": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "@@odata.type",
                                                            "id",
                                                            "lastModifiedDateTime",
                                                            "name",
                                                            "contentType",
                                                            "size",
                                                            "isInline"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "bccRecipients": {
                                                    "type": "array"
                                                },
                                                "body": {
                                                    "properties": {
                                                        "content": {
                                                            "type": "string"
                                                        },
                                                        "contentType": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "bodyPreview": {
                                                    "type": "string"
                                                },
                                                "categories": {
                                                    "type": "array"
                                                },
                                                "ccRecipients": {
                                                    "type": "array"
                                                },
                                                "changeKey": {
                                                    "type": "string"
                                                },
                                                "clientConversationId": {},
                                                "clientThreadId": {},
                                                "conversationId": {
                                                    "type": "string"
                                                },
                                                "conversationIndex": {
                                                    "type": "string"
                                                },
                                                "createdDateTime": {
                                                    "type": "string"
                                                },
                                                "flag": {
                                                    "properties": {
                                                        "flagStatus": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "from": {
                                                    "properties": {
                                                        "emailAddress": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "hasAttachments": {
                                                    "type": "boolean"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "importance": {
                                                    "type": "string"
                                                },
                                                "inferenceClassification": {
                                                    "type": "string"
                                                },
                                                "internetMessageId": {
                                                    "type": "string"
                                                },
                                                "isDeliveryReceiptRequested": {
                                                    "type": [
                                                        "boolean",
                                                        "null"
                                                    ]
                                                },
                                                "isDraft": {
                                                    "type": [
                                                        "boolean",
                                                        "null"
                                                    ]
                                                },
                                                "isRead": {
                                                    "type": [
                                                        "boolean",
                                                        "null"
                                                    ]
                                                },
                                                "isReadReceiptRequested": {
                                                    "type": [
                                                        "boolean",
                                                        "null"
                                                    ]
                                                },
                                                "lastModifiedDateTime": {
                                                    "type": "string"
                                                },
                                                "mentionsPreview": {},
                                                "parentFolderId": {
                                                    "type": "string"
                                                },
                                                "receivedDateTime": {
                                                    "type": "string"
                                                },
                                                "replyTo": {
                                                    "type": "array"
                                                },
                                                "sender": {
                                                    "properties": {
                                                        "emailAddress": {
                                                            "properties": {
                                                                "address": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "sentDateTime": {
                                                    "type": "string"
                                                },
                                                "subject": {
                                                    "type": "string"
                                                },
                                                "toRecipients": {
                                                    "items": {
                                                        "properties": {
                                                            "emailAddress": {
                                                                "properties": {
                                                                    "address": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "required": [
                                                            "emailAddress"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "unsubscribeData": {
                                                    "type": "array"
                                                },
                                                "unsubscribeEnabled": {
                                                    "type": "boolean"
                                                },
                                                "webLink": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Run_Collector": {
                                    "runAfter": {
                                        "Filter_for_Modern_Attachments": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Filter_for_Modern_Attachments')",
                                        "method": "POST",
                                        "uri": "https://prod-17.westus2.logic.azure.com/workflows/3d2f1d537ff7494fba4180db7169f34f/triggers/manual/paths/invoke/user/@{variables('user')}/GUID/@{guid()}/message/@{triggerBody()?['id']}/CMD/@{triggerOutputs()['relativePathParameters']['CMD']}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I5z1f9RSZ25HDMDDOkpezYEnR9z1wP9BPcxvZum0xWw"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                }
                            },
                            "runAfter": {
                                "Set_variable": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "100_PSLogFile_2": {
                                        "runAfter": {
                                            "Create_Log_Entry": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Workflow",
                                        "inputs": {
                                            "body": "@outputs('Create_Log_Entry')",
                                            "host": {
                                                "triggerName": "manual",
                                                "workflow": {
                                                    "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                                }
                                            }
                                        },
                                        "operationOptions": "DisableAsyncPattern"
                                    },
                                    "Create_Log_Entry": {
                                        "runAfter": {
                                            "Save_Emails_with_No_Attachments": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Compose",
                                        "inputs": {
                                            "Action": "Create Email Record",
                                            "Date": "@utcNow()",
                                            "EmailID": "@{body('Save_Emails_with_No_Attachments')?['Id']}",
                                            "GUID": "@{body('Save_Emails_with_No_Attachments')?['Name']}"
                                        }
                                    },
                                    "Save_Emails_with_No_Attachments": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": "@triggerBody()",
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azureblob']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/datasets/default/files",
                                            "queries": {
                                                "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{variables('user')}/@{triggerOutputs()['relativePathParameters']['RCD']}/messages\n",
                                                "name": "@{guid()}",
                                                "queryParametersSingleEncoded": true
                                            }
                                        },
                                        "operationOptions": "DisableAsyncPattern",
                                        "runtimeConfiguration": {
                                            "contentTransfer": {
                                                "transferMode": "Chunked"
                                            }
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['hasAttachments']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_3_PSEmail_AttachmentCollector_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "/user/{user}/CMD/{CMD}",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "@@odata.etag": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "@@removed": {
                                            "type": [
                                                "object",
                                                "null"
                                            ]
                                        },
                                        "bccRecipients": {
                                            "type": "array"
                                        },
                                        "body": {
                                            "properties": {
                                                "content": {
                                                    "type": "string"
                                                },
                                                "contentType": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "bodyPreview": {
                                            "type": "string"
                                        },
                                        "categories": {
                                            "type": "array"
                                        },
                                        "ccRecipients": {
                                            "type": "array"
                                        },
                                        "changeKey": {
                                            "type": "string"
                                        },
                                        "clientConversationId": {},
                                        "clientThreadId": {},
                                        "conversationId": {
                                            "type": "string"
                                        },
                                        "conversationIndex": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": "string"
                                        },
                                        "flag": {
                                            "properties": {
                                                "flagStatus": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "from": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "hasAttachments": {
                                            "type": "boolean"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "importance": {
                                            "type": "string"
                                        },
                                        "inferenceClassification": {
                                            "type": "string"
                                        },
                                        "internetMessageId": {
                                            "type": "string"
                                        },
                                        "isDeliveryReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "isDraft": {
                                            "type": "boolean"
                                        },
                                        "isRead": {
                                            "type": "boolean"
                                        },
                                        "isReadReceiptRequested": {
                                            "type": "boolean"
                                        },
                                        "lastModifiedDateTime": {
                                            "type": "string"
                                        },
                                        "mentionsPreview": {},
                                        "parentFolderId": {
                                            "type": "string"
                                        },
                                        "receivedDateTime": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "replyTo": {
                                            "type": "array"
                                        },
                                        "sender": {
                                            "properties": {
                                                "emailAddress": {
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sentDateTime": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "toRecipients": {
                                            "items": {
                                                "properties": {
                                                    "emailAddress": {
                                                        "properties": {
                                                            "address": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "emailAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "unsubscribeData": {
                                            "type": "array"
                                        },
                                        "unsubscribeEnabled": {
                                            "type": "boolean"
                                        },
                                        "webLink": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 50
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile_2": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Compose": {
                            "runAfter": {
                                "Save_Email_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "Action": "Create Email Record",
                                "Date": "@utcNow()",
                                "EmailID": "@{triggerBody()?['id']}",
                                "GUID": "@{variables('GUID')}"
                            }
                        },
                        "Get_GUID": {
                            "runAfter": {
                                "ReferenceAttachmentParts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "GUID",
                                        "type": "String",
                                        "value": "@{guid()}"
                                    }
                                ]
                            }
                        },
                        "Initialize:Username_Parts": {
                            "runAfter": {
                                "Initialize_User2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Username Parts",
                                        "type": "Array"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Received_Date": {
                            "runAfter": {
                                "Get_GUID": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Received Date",
                                        "type": "String",
                                        "value": "'NoReceivedDate'"
                                    }
                                ]
                            }
                        },
                        "Initialize_Trigger_Body": {
                            "runAfter": {
                                "RunDateTime": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Trigger Body",
                                        "type": "String",
                                        "value": "@{triggerBody()}"
                                    }
                                ]
                            }
                        },
                        "Initialize_User2": {
                            "runAfter": {
                                "initialize:user": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User2",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Received_Date_Not_null": {
                            "actions": {
                                "Set:Received_Date": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "Received Date",
                                        "value": "@{formatDateTime(triggerBody()['receivedDateTime'],'yyyy-MM')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize:_Received_Date": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "not": {
                                            "equals": [
                                                "@triggerBody()['receivedDateTime']",
                                                "@null"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "ReferenceAttachmentParts": {
                            "runAfter": {
                                "Initialize_Trigger_Body": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ReferenceAttachmentParts",
                                        "type": "Array"
                                    }
                                ]
                            }
                        },
                        "RunDateTime": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "rundate",
                                        "type": "String",
                                        "value": "@triggerOutputs()['relativePathParameters']['CMD']"
                                    }
                                ]
                            }
                        },
                        "Run_on_Array": {
                            "actions": {
                                "Array_Condition": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@triggerBody()['value']",
                                        "method": "POST",
                                        "uri": "https://prod-22.westus2.logic.azure.com/workflows/35d3df87acf54c45aad0e820e5c827b6/triggers/manual/paths/invoke/user/@{variables('user')}/guid/@{variables('GUID')}/CMD/@{variables('rundate')}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=yd56BmS4xhs2Fqv1lrzqVBznJ5E2-goQPTjqn7k-RrY"
                                    }
                                }
                            },
                            "runAfter": {
                                "hasAttachment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Run_on_Array_Fail": {
                            "actions": {
                                "Run_EML_for_1_item": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@createarray(triggerBody())",
                                        "method": "POST",
                                        "uri": "https://prod-22.westus2.logic.azure.com/workflows/35d3df87acf54c45aad0e820e5c827b6/triggers/manual/paths/invoke/user/@{variables('user')}/guid/@{variables('GUID')}/CMD/@{variables('rundate')}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=yd56BmS4xhs2Fqv1lrzqVBznJ5E2-goQPTjqn7k-RrY"
                                    }
                                }
                            },
                            "runAfter": {
                                "Run_on_Array": [
                                    "Failed"
                                ]
                            },
                            "type": "Scope"
                        },
                        "Save_Email_JSON": {
                            "runAfter": {
                                "hasAttachment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('Trigger Body')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "mail/collection/@{variables('rundate')}/@{variables('user')}/@{variables('Received Date')}/messages/",
                                    "name": "@variables('GUID')",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "hasAttachment": {
                            "actions": {
                                "Check_for_Attachments": {
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Run_Collector": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": [
                                                                "@body('Filter_for_Modern_Attachments')"
                                                            ],
                                                            "Parent": [
                                                                "@triggerBody()"
                                                            ]
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://prod-17.westus2.logic.azure.com/workflows/3d2f1d537ff7494fba4180db7169f34f/triggers/manual/paths/invoke/user/@{variables('user')}/GUID/@{variables('GUID')}/message/@{triggerBody()?['id']}/CMD/@{variables('rundate')}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I5z1f9RSZ25HDMDDOkpezYEnR9z1wP9BPcxvZum0xWw"
                                                    },
                                                    "operationOptions": "DisableAsyncPattern"
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_for_Modern_Attachments": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(body('Filter_for_Modern_Attachments'))",
                                                            4
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_for_Attachments": {
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Parse_JSON')?['attachments']",
                                                "where": "@not(equals(item()?['contentBytes'], null))"
                                            }
                                        },
                                        "Filter_for_Modern_Attachments": {
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Parse_JSON')?['attachments']",
                                                "where": "@not(equals(item()?['sourceUrl'], null))"
                                            }
                                        },
                                        "Get_attachments_": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "method": "GET",
                                                    "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerBody()['id']}/?$expand=attachments"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/codeless/InvokeHttp",
                                                "retryPolicy": {
                                                    "count": 20,
                                                    "interval": "PT20S",
                                                    "type": "exponential"
                                                }
                                            },
                                            "operationOptions": "DisableAsyncPattern"
                                        },
                                        "Parse_JSON": {
                                            "runAfter": {
                                                "Set_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('Get_attachments_')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "@@odata.etag": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "attachments": {
                                                            "items": {
                                                                "properties": {
                                                                    "@@odata.mediaContentType": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "@@odata.type": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentBytes": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentId": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentLocation": {},
                                                                    "contentType": {},
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "image": {
                                                                        "properties": {
                                                                            "height": {
                                                                                "type": "integer"
                                                                            },
                                                                            "width": {
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": [
                                                                            "object",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isFolder": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "isInline": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "lastModifiedDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "permission": {
                                                                        "type": "string"
                                                                    },
                                                                    "previewUrl": {
                                                                        "type": "string"
                                                                    },
                                                                    "providerType": {
                                                                        "type": "string"
                                                                    },
                                                                    "size": {
                                                                        "type": "integer"
                                                                    },
                                                                    "sourceUrl": {
                                                                        "type": "string"
                                                                    },
                                                                    "thumbnailUrl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "@@odata.type",
                                                                    "id",
                                                                    "lastModifiedDateTime",
                                                                    "name",
                                                                    "contentType",
                                                                    "size",
                                                                    "isInline"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "bccRecipients": {
                                                            "type": "array"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "content": {
                                                                    "type": "string"
                                                                },
                                                                "contentType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "bodyPreview": {
                                                            "type": "string"
                                                        },
                                                        "categories": {
                                                            "type": "array"
                                                        },
                                                        "ccRecipients": {
                                                            "type": "array"
                                                        },
                                                        "changeKey": {
                                                            "type": "string"
                                                        },
                                                        "clientConversationId": {},
                                                        "clientThreadId": {},
                                                        "conversationId": {
                                                            "type": "string"
                                                        },
                                                        "conversationIndex": {
                                                            "type": "string"
                                                        },
                                                        "createdDateTime": {
                                                            "type": "string"
                                                        },
                                                        "flag": {
                                                            "properties": {
                                                                "flagStatus": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "from": {
                                                            "properties": {
                                                                "emailAddress": {
                                                                    "properties": {
                                                                        "address": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hasAttachments": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "importance": {
                                                            "type": "string"
                                                        },
                                                        "inferenceClassification": {
                                                            "type": "string"
                                                        },
                                                        "internetMessageId": {
                                                            "type": "string"
                                                        },
                                                        "isDeliveryReceiptRequested": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isDraft": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isRead": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isReadReceiptRequested": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "lastModifiedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "mentionsPreview": {},
                                                        "parentFolderId": {
                                                            "type": "string"
                                                        },
                                                        "receivedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "replyTo": {
                                                            "type": "array"
                                                        },
                                                        "sender": {
                                                            "properties": {
                                                                "emailAddress": {
                                                                    "properties": {
                                                                        "address": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sentDateTime": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "subject": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "toRecipients": {
                                                            "items": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "emailAddress"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "unsubscribeData": {
                                                            "type": "array"
                                                        },
                                                        "unsubscribeEnabled": {
                                                            "type": "boolean"
                                                        },
                                                        "webLink": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Send_to_3_3_For_Attachment_Binary_Save": {
                                            "runAfter": {
                                                "Filter_for_Attachments": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": "@body('Filter_for_Attachments')",
                                                "method": "POST",
                                                "uri": "https://prod-30.westus2.logic.azure.com/workflows/ca94b9aa82b84f0596b580a9efe1922b/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerBody()?['id']}/guid/@{variables('GUID')}/CMD/@{variables('rundate')}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=C66qKgCSDlrUBVrrAE5CXapis415qxO-5oVJjjmP-x8"
                                            }
                                        },
                                        "Set_variable": {
                                            "runAfter": {
                                                "Get_attachments_": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Trigger Body",
                                                "value": "@{body('Get_attachments_')}"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Scope"
                                },
                                "If_Get_Attachment_is_too_large": {
                                    "actions": {
                                        "Condition_2": {
                                            "actions": {
                                                "Run_Collector_for_Modern_Attachment_B64": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": [
                                                                "@body('Filter_for_Modern_Attachment_no_B64')"
                                                            ],
                                                            "Parent": [
                                                                "@triggerBody()"
                                                            ]
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://prod-17.westus2.logic.azure.com/workflows/3d2f1d537ff7494fba4180db7169f34f/triggers/manual/paths/invoke/user/@{variables('user')}/GUID/@{variables('GUID')}/message/@{triggerBody()?['id']}/CMD/@{variables('rundate')}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=I5z1f9RSZ25HDMDDOkpezYEnR9z1wP9BPcxvZum0xWw"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Filter_for_Modern_Attachment_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greater": [
                                                            "@length(body('Filter_for_Modern_Attachment_no_B64'))",
                                                            4
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Filter_for_Modern_Attachment_no_B64": {
                                            "runAfter": {
                                                "Parse_JSON:_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Parse_JSON:_no_B64')?['attachments']",
                                                "where": "@not(equals(item()?['sourceUrl'], null))"
                                            }
                                        },
                                        "Filter_for_attachment_no_B64": {
                                            "runAfter": {
                                                "Parse_JSON:_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query",
                                            "inputs": {
                                                "from": "@body('Parse_JSON:_no_B64')?['attachments']",
                                                "where": "@equals(item()?['sourceUrl'], null)"
                                            }
                                        },
                                        "Get_Email_with_attachment_metadata_no_B64": {
                                            "runAfter": {},
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "method": "GET",
                                                    "url": "https://graph.microsoft.com/beta/users/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerBody()['id']}?$expand=attachments($select = id, lastModifiedDateTime,name, contentType, size, isInline)"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['webcontents']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/codeless/InvokeHttp"
                                            }
                                        },
                                        "HTTP": {
                                            "runAfter": {
                                                "Filter_for_attachment_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "body": "@body('Filter_for_attachment_no_B64')",
                                                "method": "POST",
                                                "uri": "https://prod-08.westus2.logic.azure.com/workflows/a37a9c672bb346398862d1c9c7e14db9/triggers/manual/paths/invoke/user/@{triggerOutputs()['relativePathParameters']['user']}/messages/@{triggerBody()?['id']}/guid/@{variables('GUID')}/CMD/@{triggerOutputs()['relativePathParameters']['CMD']}/ReceivedDate/@{variables('Received Date')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=678SbnmI0gEq4PPojk5aFQwTa2sgxKruF1eI95MB25I"
                                            }
                                        },
                                        "Parse_JSON:_no_B64": {
                                            "runAfter": {
                                                "Set_trigger_Body_when_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@variables('Trigger Body')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "@@odata.etag": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "attachments": {
                                                            "items": {
                                                                "properties": {
                                                                    "@@odata.mediaContentType": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "@@odata.type": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentBytes": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentId": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "contentLocation": {},
                                                                    "contentType": {},
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "image": {
                                                                        "properties": {
                                                                            "height": {
                                                                                "type": "integer"
                                                                            },
                                                                            "width": {
                                                                                "type": "integer"
                                                                            }
                                                                        },
                                                                        "type": [
                                                                            "object",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isFolder": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "isInline": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "lastModifiedDateTime": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "permission": {
                                                                        "type": "string"
                                                                    },
                                                                    "previewUrl": {
                                                                        "type": "string"
                                                                    },
                                                                    "providerType": {
                                                                        "type": "string"
                                                                    },
                                                                    "size": {
                                                                        "type": "integer"
                                                                    },
                                                                    "sourceUrl": {
                                                                        "type": "string"
                                                                    },
                                                                    "thumbnailUrl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "@@odata.type",
                                                                    "id",
                                                                    "lastModifiedDateTime",
                                                                    "name",
                                                                    "contentType",
                                                                    "size",
                                                                    "isInline"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "bccRecipients": {
                                                            "type": "array"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "content": {
                                                                    "type": "string"
                                                                },
                                                                "contentType": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "bodyPreview": {
                                                            "type": "string"
                                                        },
                                                        "categories": {
                                                            "type": "array"
                                                        },
                                                        "ccRecipients": {
                                                            "type": "array"
                                                        },
                                                        "changeKey": {
                                                            "type": "string"
                                                        },
                                                        "clientConversationId": {},
                                                        "clientThreadId": {},
                                                        "conversationId": {
                                                            "type": "string"
                                                        },
                                                        "conversationIndex": {
                                                            "type": "string"
                                                        },
                                                        "createdDateTime": {
                                                            "type": "string"
                                                        },
                                                        "flag": {
                                                            "properties": {
                                                                "flagStatus": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "from": {
                                                            "properties": {
                                                                "emailAddress": {
                                                                    "properties": {
                                                                        "address": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hasAttachments": {
                                                            "type": "boolean"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "importance": {
                                                            "type": "string"
                                                        },
                                                        "inferenceClassification": {
                                                            "type": "string"
                                                        },
                                                        "internetMessageId": {
                                                            "type": "string"
                                                        },
                                                        "isDeliveryReceiptRequested": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isDraft": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isRead": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "isReadReceiptRequested": {
                                                            "type": [
                                                                "boolean",
                                                                "null"
                                                            ]
                                                        },
                                                        "lastModifiedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "mentionsPreview": {},
                                                        "parentFolderId": {
                                                            "type": "string"
                                                        },
                                                        "receivedDateTime": {
                                                            "type": "string"
                                                        },
                                                        "replyTo": {
                                                            "type": "array"
                                                        },
                                                        "sender": {
                                                            "properties": {
                                                                "emailAddress": {
                                                                    "properties": {
                                                                        "address": {
                                                                            "type": "string"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "sentDateTime": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "subject": {
                                                            "type": [
                                                                "string",
                                                                "null"
                                                            ]
                                                        },
                                                        "toRecipients": {
                                                            "items": {
                                                                "properties": {
                                                                    "emailAddress": {
                                                                        "properties": {
                                                                            "address": {
                                                                                "type": "string"
                                                                            },
                                                                            "name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "emailAddress"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "unsubscribeData": {
                                                            "type": "array"
                                                        },
                                                        "unsubscribeEnabled": {
                                                            "type": "boolean"
                                                        },
                                                        "webLink": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_trigger_Body_when_no_B64": {
                                            "runAfter": {
                                                "Get_Email_with_attachment_metadata_no_B64": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Trigger Body",
                                                "value": "@{body('Get_Email_with_attachment_metadata_no_B64')}"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Check_for_Attachments": [
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "Scope"
                                }
                            },
                            "runAfter": {
                                "Received_Date_Not_null": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@triggerBody()?['hasAttachments']",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "initialize:user": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user",
                                        "type": "String",
                                        "value": "@triggerOutputs()['relativePathParameters']['user']"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_4_PSModernAttachment_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "relativePath": "/user/{user}/GUID/{GUID}/message/{message}/ReceivedDate/{RCD}/CMD/{CMD}",
                                "schema": {
                                    "Body": {
                                        "items": {
                                            "properties": {
                                                "@@odata.type": {
                                                    "type": "string"
                                                },
                                                "contentType": {},
                                                "id": {
                                                    "type": "string"
                                                },
                                                "isFolder": {
                                                    "type": "boolean"
                                                },
                                                "isInline": {
                                                    "type": "boolean"
                                                },
                                                "lastModifiedDateTime": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "permission": {
                                                    "type": "string"
                                                },
                                                "previewUrl": {
                                                    "type": "string"
                                                },
                                                "providerType": {
                                                    "type": "string"
                                                },
                                                "size": {
                                                    "type": "integer"
                                                },
                                                "sourceUrl": {
                                                    "type": "string"
                                                },
                                                "thumbnailUrl": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "@@odata.type",
                                                "id",
                                                "lastModifiedDateTime",
                                                "name",
                                                "contentType",
                                                "size",
                                                "isInline",
                                                "sourceUrl",
                                                "providerType",
                                                "thumbnailUrl",
                                                "previewUrl",
                                                "permission",
                                                "isFolder"
                                            ],
                                            "type": "object"
                                        },
                                        "type": "array"
                                    },
                                    "Parent": {
                                        "items": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            }
                        },
                        "Compose": {
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "_{\n  \"Action\": \"Create Modern Attachment\",\n  \"Date\": @{utcNow()},\n  \"EmailID\": \"@{triggerOutputs()['relativePathParameters']['message']}\",\n  \"GUID\": \"@{body('Create_blob')?['Name']}\"\n}"
                        },
                        "Create_Error_Message_Blob": {
                            "runAfter": {
                                "Until": [
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "{\"Comment\":\"Error in creation could not parse available list\", \"Date\":@{utcNow()} , \"Description\": \"@{variables('url')}\", \"Body\":@{triggerBody()}}",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/modernattachment/@{triggerOutputs()['relativePathParameters']['guid']}/error",
                                    "name": "MA_Error_@{guid()}",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_Error_Message_Blob2": {
                            "runAfter": {
                                "Invoke_an_HTTP_request": [
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "{\"Comment\":\"Error in creation do not have rights to user\", \"Date\":@{utcNow()} , \"Description\": \"@{variables('url')}\", \"Body\":@{triggerBody()}}",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/modernattachment/@{triggerOutputs()['relativePathParameters']['guid']}/error@{triggerOutputs()['relativePathParameters']['user']}/error",
                                    "name": "MA_AccessError_@{guid()}",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Invoke_an_HTTP_request": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('Invoke_an_HTTP_request')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/modernattachment/@{triggerOutputs()['relativePathParameters']['guid']}/",
                                    "name": "@{guid()}",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['value']",
                            "actions": {
                                "HTTP": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "@items('For_each')?['@microsoft.graph.downloadUrl']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "foreach": "@body('Parse_JSON')?['value']",
                            "actions": {
                                "Create_Binary": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('HTTP')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "mail/collection/@{triggerOutputs()['relativePathParameters']['CMD']}/@{triggerOutputs()['relativePathParameters']['user']}/@{triggerOutputs()['relativePathParameters']['RCD']}/modernattachment/@{triggerOutputs()['relativePathParameters']['guid']}",
                                            "name": "@{body('Create_blob')?['Name']}_@{items('For_each_2')?['name']}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_Counter": {
                            "runAfter": {
                                "Initialize_RefAttachmentParts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Counter",
                                        "type": "Integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Initialize_Done": {
                            "runAfter": {
                                "Initialize_Counter": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Done",
                                        "type": "Boolean"
                                    }
                                ]
                            }
                        },
                        "Initialize_Length": {
                            "runAfter": {
                                "Initialize_Done": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Length",
                                        "type": "Integer",
                                        "value": "@length(variables('ParseRefAttachmentParts'))"
                                    }
                                ]
                            }
                        },
                        "Initialize_RefAttachmentParts": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ParseRefAttachmentParts",
                                        "type": "Array",
                                        "value": "@split(variables('url'),'/')"
                                    }
                                ]
                            }
                        },
                        "Initialize_UsernameParts": {
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UsernameParts",
                                        "type": "Array",
                                        "value": "@split(variables('ParseRefAttachmentParts')[variables('Counter')],'_')"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Requested_Item": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "url",
                                        "type": "String",
                                        "value": "@{replace(body('Requested_Item')?['sourceUrl'],':w:/g/','')}"
                                    }
                                ]
                            }
                        },
                        "Invoke_an_HTTP_request": {
                            "runAfter": {
                                "User2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "method": "GET",
                                    "url": "https://graph.microsoft.com/beta/users/@{variables('User2')}/drive/root/children/Attachments/children?$filter=startswith(webUrl,'@{variables('url')}')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/codeless/InvokeHttp"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Invoke_an_HTTP_request')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "@@microsoft.graph.downloadUrl": {
                                                        "type": "string"
                                                    },
                                                    "cTag": {
                                                        "type": "string"
                                                    },
                                                    "createdBy": {
                                                        "properties": {
                                                            "user": {
                                                                "properties": {
                                                                    "displayName": {
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "createdDateTime": {
                                                        "type": "string"
                                                    },
                                                    "eTag": {
                                                        "type": "string"
                                                    },
                                                    "file": {
                                                        "properties": {
                                                            "hashes": {
                                                                "properties": {
                                                                    "quickXorHash": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "mimeType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "fileSystemInfo": {
                                                        "properties": {
                                                            "createdDateTime": {
                                                                "type": "string"
                                                            },
                                                            "lastModifiedDateTime": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "properties": {
                                                            "height": {
                                                                "type": "integer"
                                                            },
                                                            "width": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lastModifiedBy": {
                                                        "properties": {
                                                            "user": {
                                                                "properties": {
                                                                    "displayName": {
                                                                        "type": "string"
                                                                    },
                                                                    "email": {
                                                                        "type": "string"
                                                                    },
                                                                    "id": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "lastModifiedDateTime": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "parentReference": {
                                                        "properties": {
                                                            "driveId": {
                                                                "type": "string"
                                                            },
                                                            "driveType": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "shared": {
                                                        "properties": {
                                                            "scope": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "size": {
                                                        "type": "integer"
                                                    },
                                                    "webUrl": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "@@microsoft.graph.downloadUrl",
                                                    "createdDateTime",
                                                    "eTag",
                                                    "id",
                                                    "lastModifiedDateTime",
                                                    "name",
                                                    "webUrl",
                                                    "cTag",
                                                    "size",
                                                    "createdBy",
                                                    "lastModifiedBy",
                                                    "parentReference",
                                                    "file",
                                                    "fileSystemInfo",
                                                    "image",
                                                    "shared"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Requested_Item": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "@@odata.type": {
                                            "type": "string"
                                        },
                                        "contentType": {},
                                        "id": {
                                            "type": "string"
                                        },
                                        "isFolder": {
                                            "type": "boolean"
                                        },
                                        "isInline": {
                                            "type": "boolean"
                                        },
                                        "lastModifiedDateTime": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "permission": {
                                            "type": "string"
                                        },
                                        "previewUrl": {
                                            "type": "string"
                                        },
                                        "providerType": {
                                            "type": "string"
                                        },
                                        "size": {
                                            "type": "integer"
                                        },
                                        "sourceUrl": {
                                            "type": "string"
                                        },
                                        "thumbnailUrl": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Until": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Done",
                                                "value": "@true"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Increment_variable": {
                                                "runAfter": {},
                                                "type": "IncrementVariable",
                                                "inputs": {
                                                    "name": "Counter"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@variables('ParseRefAttachmentParts')[variables('Counter')]",
                                                    "_"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_Length": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('Done'), true)",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "User2": {
                            "runAfter": {
                                "Initialize_UsernameParts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user2",
                                        "type": "String",
                                        "value": "@{concat(variables('UsernameParts')[0],'@',variables('UsernameParts')[1],'.',variables('UsernameParts')[2])}"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_1_EmailStartv2_name')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "splitOn": "@triggerBody()",
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "Name": "string"
                                }
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "runs": 42
                                }
                            }
                        }
                    },
                    "actions": {
                        "100_PSLogFile": {
                            "runAfter": {
                                "Create_blob": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "body": {
                                    "Log": [
                                        "@triggerBody()"
                                    ],
                                    "action": "Completed Collector for this Folder",
                                    "date": [
                                        "@utcNow()"
                                    ],
                                    "user": [
                                        "@variables('User')"
                                    ]
                                },
                                "host": {
                                    "triggerName": "manual",
                                    "workflow": {
                                        "id": "[resourceId('Microsoft.Logic/workflows', parameters('workflows_100_PSLogFile_name'))]"
                                    }
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Check_if_Delta_URL_Exists": {
                            "actions": {
                                "Check_to_See_if_it_is_a_Deltalink_and_not_a_NextLink": {
                                    "actions": {
                                        "Set_URL_to_deltalink": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Create_New_Delta_Request')['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_variable_3": {
                                            "runAfter": {
                                                "Set_URL_to_deltalink": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": "@true"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Set_URL_to_Delta_NextLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "less": [
                                                    "@length(variables('URL'))",
                                                    4
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Collect_Existing_Files": {
                                    "runAfter": {
                                        "Create_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Create_New_Delta_Request')['value']",
                                        "method": "POST",
                                        "uri": "https://prod-22.westus2.logic.azure.com/workflows/986d711f95a041829167c3b075354ae5/triggers/manual/paths/invoke/users/@{variables('User')}/CMD/@{variables('CollectionYMD')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_OIX0s6jemPIToDvcDsuwWElN1E55pVslZSP5JkD8Qk"
                                    }
                                },
                                "Create_Delta_File": {
                                    "runAfter": {
                                        "Check_to_See_if_it_is_a_Deltalink_and_not_a_NextLink": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@variables('URL')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail/delta/@{variables('User')}/MailFolders",
                                            "name": "DeltaURL",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern",
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Create_New_Delta_Request": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "https://graph.microsoft.com/beta/users/@{variables('User')}/mailFolders/delta"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp",
                                        "retryPolicy": {
                                            "count": 20,
                                            "interval": "PT20S",
                                            "maximumInterval": "PT1H",
                                            "minimumInterval": "PT10S",
                                            "type": "exponential"
                                        }
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Save_Folder_Information": {
                                    "runAfter": {
                                        "Collect_Existing_Files": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Create_New_Delta_Request')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail/collection/@{variables('CollectionYMD')}/@{variables('User')}/Folders",
                                            "name": "@{guid()}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Set_URL_to_Delta_NextLink": {
                                    "runAfter": {
                                        "Create_New_Delta_Request": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "URL",
                                        "value": "@{body('Create_New_Delta_Request')['@odata.nextlink']}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize:_Value": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "or": [
                                    {
                                        "less": [
                                            "@length(variables('URL'))",
                                            4
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Collect_Recoverable_Items": {
                            "runAfter": {
                                "100_PSLogFile": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "https://prod-26.westus2.logic.azure.com/workflows/d02ea5f69af54cc3ae6849fc826ab4d4/triggers/manual/paths/invoke/users/@{variables('User')}/CMD/@{variables('CollectionYMD')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=e34yoS8oDdA_M-S0QtBNSfFubbbnhISLUjgl_UoQTAs"
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "Go_through_Delta_URLs_until_done": [
                                    "Succeeded"
                                ]
                            },
                            "limit": {
                                "timeout": "P2D"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@variables('URL')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/mail/delta/@{variables('User')}/MailFolders",
                                    "name": "DeltaURL",
                                    "queryParametersSingleEncoded": true
                                },
                                "retryPolicy": {
                                    "count": 10,
                                    "interval": "PT20S",
                                    "type": "exponential"
                                }
                            },
                            "operationOptions": "DisableAsyncPattern",
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Get_Blob_Metadata_using_path": {
                            "runAfter": {
                                "Initialize_variable:Collection_Year-Month-Day": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/GetFileByPath",
                                "queries": {
                                    "path": "/mail/delta/@{variables('User')}/MailFolders/deltaURL",
                                    "queryParametersSingleEncoded": true
                                }
                            }
                        },
                        "Get_blob_content_2": {
                            "runAfter": {
                                "Get_Blob_Metadata_using_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/files/@{encodeURIComponent(encodeURIComponent('/mail/delta/',variables('User'),'/MailFolders/deltaURL'))}/content",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "Go_through_Delta_URLs_until_done": {
                            "actions": {
                                "Get_Delta_File": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "method": "GET",
                                            "url": "@variables('URL')"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['webcontents_1']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/codeless/InvokeHttp"
                                    }
                                },
                                "HTTP_Request_to_Collect_Folders": {
                                    "runAfter": {
                                        "Parse_Data": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "body": "@body('Parse_Data')?['value']",
                                        "method": "POST",
                                        "uri": "https://prod-22.westus2.logic.azure.com/workflows/986d711f95a041829167c3b075354ae5/triggers/manual/paths/invoke/users/@{variables('User')}/CMD/@{variables('CollectionYMD')}?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_OIX0s6jemPIToDvcDsuwWElN1E55pVslZSP5JkD8Qk"
                                    },
                                    "operationOptions": "DisableAsyncPattern"
                                },
                                "Loop_Condition": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {
                                                "Set_variable_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "URL",
                                                "value": "@{body('Parse_Data')?['@odata.deltaLink']}"
                                            }
                                        },
                                        "Set_variable_2": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Value",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Save_Folder_Infromation": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_new_@odata.nextlink": {
                                                "runAfter": {},
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "URL",
                                                    "value": "@body('Parse_Data')?['@odata.nextLink']"
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('Parse_Data')?['@odata.nextLink']",
                                                    "@null"
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Parse_Data": {
                                    "runAfter": {
                                        "Get_Delta_File": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Get_Delta_File')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.deltaLink": {
                                                    "type": "string"
                                                },
                                                "@@odata.nextLink": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "childFolderCount": {
                                                                "type": "integer"
                                                            },
                                                            "displayName": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "parentFolderId": {
                                                                "type": "string"
                                                            },
                                                            "totalItemCount": {
                                                                "type": "integer"
                                                            },
                                                            "unreadItemCount": {
                                                                "type": "integer"
                                                            },
                                                            "wellKnownName": {}
                                                        },
                                                        "required": [
                                                            "id",
                                                            "displayName",
                                                            "parentFolderId",
                                                            "childFolderCount",
                                                            "unreadItemCount",
                                                            "totalItemCount",
                                                            "wellKnownName"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Save_Folder_Infromation": {
                                    "runAfter": {
                                        "HTTP_Request_to_Collect_Folders": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@body('Get_Delta_File')",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "/mail/collection/@{variables('CollectionYMD')}/@{variables('User')}/Folders",
                                            "name": "@{guid()}",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Check_if_Delta_URL_Exists": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@equals(variables('Value'), true)",
                            "limit": {
                                "count": 1000,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Initialize:URL": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URL",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize:_Value": {
                            "runAfter": {
                                "Set_URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Value",
                                        "type": "Boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Initialize_URLTemp": {
                            "runAfter": {
                                "Initialize:URL": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URLTemp",
                                        "type": "String"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:Collection_Year-Month-Day": {
                            "runAfter": {
                                "Initialize_variable:User": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CollectionYMD",
                                        "type": "String",
                                        "value": "@{formatDateTime(utcNow(), 'yyyy_MM_dd')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable:User": {
                            "runAfter": {
                                "Initialize_URLTemp": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "User",
                                        "type": "String",
                                        "value": "@{triggerBody()['name']}"
                                    }
                                ]
                            }
                        },
                        "Set_URL": {
                            "runAfter": {
                                "Get_blob_content_2": [
                                    "Succeeded",
                                    "Failed",
                                    "Skipped",
                                    "TimedOut"
                                ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                                "name": "URL",
                                "value": "@{body('Get_blob_content_2')}"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "azureblob_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_1_name'))]",
                                "connectionName": "azureblob-1",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/azureblob"
                            },
                            "webcontents_1": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_webcontents_name'))]",
                                "connectionName": "webcontents",
                                "id": "/subscriptions/6c023439-9ba3-443a-a485-ffde6fc56c0d/providers/Microsoft.Web/locations/westus2/managedApis/webcontents"
                            }
                        }
                    }
                }
            }
        }
    ]
}